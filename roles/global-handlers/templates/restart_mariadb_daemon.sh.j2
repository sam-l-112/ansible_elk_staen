#!/bin/bash

RETRIES="{{ global.retries }}"
DELAY="{{ global.retry_delay }}"
SOCKET="/var/lib/mysql/mysql.sock"
SERVICE="mariadb.service"

# if daemon is uninstalled, no restarting is needed; so exit with success
systemctl status $SERVICE > /dev/null
if [[ $? -ne 0 ]]; then
  exit 0
fi

systemctl reset-failed $SERVICE

# First, restart the daemon
systemctl restart $SERVICE

function check_service() {
while [ $RETRIES -ne 0 ]; do
  mysqladmin ping && \
  mysql -ne 'SHOW STATUS LIKE "wsrep_local_state_comment";' | grep -i Synced &&  exit 0
  sleep $DELAY
  let RETRIES=RETRIES-1
done
  exit 1
}

# Wait and ensure the socket exists after restarting the daemon
while [ $RETRIES -ne 0 ]; do
  test -S $SOCKET && check_service
  sleep $DELAY
  let RETRIES=RETRIES-1
done

# If we reach this point, it means the service is not running.
echo "Socket file ${SOCKET} could not be found, which means $SERVICE is not running. Showing $SERVICE logs now:"
journalctl -u $SERVICE
exit 1
